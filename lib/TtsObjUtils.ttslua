-- ================================================================================
-- TTS object utils
-- ================================================================================

-- Modules.
local TtsMsgUtils = require("kintastic/lib/TtsMsgUtils")
local TtsObject   = require("kintastic/lib/TtsObject")

-- The module.
local TtsObjUtils = { }


-- ================================================================================
-- Private constants

local EMPTY_TABLE = { }


-- ================================================================================
-- Public interface

-- ----------------------------------------
-- Public function TtsObjUtils.resolve_guids

function TtsObjUtils.resolve_guids(tbl, not_required)
   not_required = not_required or EMPTY_TABLE

   local function helper(tbl)
      local resolved = { }
      for k, v in pairs(tbl) do
         local v_type = type(v)
         if v_type == "string" then
            local guid = v
            local obj = getObjectFromGUID(guid)
            if obj == nil and not not_required[guid] then
               TtsMsgUtils.broadcast_internal_error("Can't resolve guid " .. guid)
            end
            resolved[k] = obj
         elseif v_type == "table" then
            resolved[k] = helper(v)
         elseif v_type == "nil" then
            resolved[k] = nil
         else
            TtsMsgUtils.broadcast_internal_error("Don't know how to resolve a " .. v_type)
         end
      end

      return resolved
   end

   return helper(tbl)
end


-- ----------------------------------------
-- Public function TtsObjUtils.get_abs_width()
-- Public function TtsObjUtils.get_abs_height()
-- Public function TtsObjUtils.get_abs_depth()
-- Public function TtsObjUtils.get_top_pos
-- Public function TtsObjUtils.get_height_to_origin
-- Public function TtsObjUtils.get_drop_pos
-- Public function TtsObjUtils.is_stackable
-- Public function TtsObjUtils.is_stack
--
-- WARNING: DEPRECATED/OBSLETE. Use TtsObject instead.

TtsObjUtils.get_abs_width        = TtsObject.get_abs_width
TtsObjUtils.get_abs_height       = TtsObject.get_abs_height
TtsObjUtils.get_abs_depth        = TtsObject.get_abs_depth
TtsObjUtils.get_top_pos          = TtsObject.get_top_pos
TtsObjUtils.get_height_to_origin = TtsObject.get_height_to_origin
TtsObjUtils.get_drop_pos         = |container, obj|TtsObject.get_drop_pos(obj, container)
TtsObjUtils.is_stackable         = TtsObject.is_stackable
TtsObjUtils.is_stack             = TtsObject.is_stack


-- ================================================================================

return TtsObjUtils
