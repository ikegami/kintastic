-- ================================================================================
-- Promise-based version of Object methods.
-- ================================================================================

-- Modules.
local Promise       = require("kintastic/lib/Promise")
local TableUtils    = require("kintastic/lib/TableUtils")
local BaseTtsObject = require("kintastic/lib/TtsObject")

-- Forward declarations for privates found at the bottom.
local wait_for_instant_transform
local wait_for_smooth_transform
local wrap_instant_transform
local wrap_smooth_transform

-- The module.
local TtsObject = { }

-- Inherit functions from base TtsZoneUtils.
setmetatable(TtsObject, {
   __index = BaseTtsObject,
})


-- ================================================================================
-- Public interface
-- Thin, promise-returning wrappers.
--
-- Unless otherwise stated, each function returns
-- a promise which will be fulfilled with `obj`
-- or rejected with an error message.

-- ----------------------------------------
-- Public function TtsObject.setTransform
-- Public function TtsObject.setTransformSmooth
-- Public function TtsObject.setPosition
-- Public function TtsObject.setPositionSmooth
-- Public function TtsObject.translate
-- Public function TtsObject.setRotation
-- Public function TtsObject.setRotationSmooth
-- Public function TtsObject.rotate
-- Public function TtsObject.setScale
-- Public function TtsObject.scale
-- Public function TtsObject.moveToZoneTop
-- Public function TtsObject.moveToZoneTopSmooth

TtsObject.setTransform                   = |obj, ...|wrap_instant_transform( obj, BaseTtsObject.setTransform,        obj, ... )
TtsObject.setTransformSmooth             = |obj, ...|wrap_smooth_transform(  obj, BaseTtsObject.setTransformSmooth,  obj, ... )
TtsObject.setPosition                    = |obj, ...|wrap_instant_transform( obj, obj.setPosition,                        ... )
TtsObject.setPositionSmooth              = |obj, ...|wrap_smooth_transform(  obj, obj.setPositionSmooth,                  ... )
TtsObject.translate                      = |obj, ...|wrap_smooth_transform(  obj, obj.translate,                          ... )
TtsObject.setRotation                    = |obj, ...|wrap_instant_transform( obj, obj.setRotation,                        ... )
TtsObject.setRotationSmooth              = |obj, ...|wrap_smooth_transform(  obj, obj.setRotationSmooth,                  ... )
TtsObject.rotate                         = |obj, ...|wrap_smooth_transform(  obj, obj.rotate,                             ... )
TtsObject.setScale                       = |obj, ...|wrap_instant_transform( obj, obj.setScale,                           ... )
TtsObject.scale                          = |obj, ...|wrap_instant_transform( obj, obj.scale,                              ... )
TtsObject.moveToZoneTop                  = |obj, ...|wrap_instant_transform( obj, BaseTtsObject.moveToZoneTop,       obj, ... )
TtsObject.moveToZoneTopSmooth            = |obj, ...|wrap_smooth_transform(  obj, BaseTtsObject.moveToZoneTopSmooth, obj, ... )


-- ----------------------------------------
-- Public function TtsObject.takeObject
--
-- This is a thin wrapper around `obj.takeObject` that returns a promise that
-- becomes fulfilled with the spawned object once the object has been created.
--
-- If a `callback_function` argument is provided, the returned promise will
-- adopt the value returned by the callback function.

function TtsObject.takeObject(obj, args)
   return Promise:new(
      function(resolve, reject)
         args = args and TableUtils.copy(args) or { }

         if args.callback_function then
            local orig_cb = args.callback_function
            args.callback_function = function(obj)
               resolve(orib_cb(obj))
            end
         else
            args.callback_function = resolve
         end

         obj.takeObject(args)
      end
   )
end


-- ----------------------------------------

function TtsObject.addForce()           error("addForce isn't currently supported")           end
function TtsObject.addTorque()          error("addTorque isn't currently supported")          end
function TtsObject.setVelocity()        error("setVelocity isn't currently supported")        end
function TtsObject.setAngularVelocity() error("setAngularVelocity isn't currently supported") end


-- ================================================================================
-- Private helpers

-- ----------------------------------------
-- Private function wait_for_instant_transform
--
-- They're not quite instantaneous.

function wait_for_instant_transform(obj, resolve, reject)
   Wait.frames(
      function()
         if obj == nil then
            reject("Destroyed")
         else
            resolve(obj)
         end
      end,
      1
   )
end


-- ----------------------------------------
-- Private function wait_for_smooth_transform

function wait_for_smooth_transform(obj, resolve, reject)
   Wait.condition(
      function()
         if obj == nil then
            reject("Destroyed")
         else
            resolve(obj)
         end
      end,
      function()
         return obj == nil or not obj.isSmoothMoving()
      end,
      3,
      function()
         reject("Timeout")
      end
   )
end


-- ----------------------------------------
-- Private function wrap_instant_transform

function wrap_instant_transform(obj, f, ...)
   local args = { ... }
   return Promise:new(
      function(resolve, reject)
         f(unpack(args))
         wait_for_instant_transform(obj, resolve, reject)
      end
   )
end


-- ----------------------------------------
-- Private function wrap_smooth_transform

function wrap_smooth_transform(obj, f, ...)
   local args = { ... }
   return Promise:new(
      function(resolve, reject)
         f(unpack(args))
         wait_for_smooth_transform(obj, resolve, reject)
      end
   )
end


-- ================================================================================

return TtsObject
